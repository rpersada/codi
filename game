package tebk;

import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.WindowConstants;
import static sun.font.GlyphLayout.done;

/**
 *
 * @author persada
 */
public class Game extends javax.swing.JFrame {

    CardLayout cl;
    int waktu;    
    public boolean timer = true;
    int score = 0;
    int detikAtas = 120;
    String permintaan = Home.segmen;

    public Game() {
        initComponents();
         initComponents();
        cards.add(new Home(this, cards), "Home");
        
        Puzzle = new Puzzle(new ImageIcon(main.class.getResource("macannn.png")).getImage());
        cards.add(Puzzle, "level1");
        Puzzle = new Puzzle(new ImageIcon(main.class.getResource("raflesnew.png")).getImage());
        cards.add(Puzzle, "level2");
        Puzzle = new Puzzle(new ImageIcon(main.class.getResource("kinew.png")).getImage());
        cards.add(Puzzle, "level3");
        Puzzle = new Puzzle(new ImageIcon(main.class.getResource("silanew.png")).getImage());
        cards.add(Puzzle, "level4");
        Puzzle = new Puzzle(new ImageIcon(main.class.getResource("doktornew.png")).getImage());
        cards.add(Puzzle, "level5");
        Puzzle = new Puzzle(new ImageIcon(main.class.getResource("jokowinew.png")).getImage());
        cards.add(Puzzle, "level6");
        Puzzle = new Puzzle(new ImageIcon(main.class.getResource("pulaunew.png")).getImage());
        cards.add(Puzzle, "level7");
        Puzzle = new Puzzle(new ImageIcon(main.class.getResource("rumahnew.png")).getImage());
        cards.add(Puzzle, "level8");
        Puzzle = new Puzzle(new ImageIcon(main.class.getResource("tarinew.png")).getImage());
        cards.add(Puzzle, "level9");
        Puzzle = new Puzzle(new ImageIcon(main.class.getResource("masjidnew.png")).getImage());
        cards.add(Puzzle, "level10");
        cl = (CardLayout) cards.getLayout();
        cl.show(cards, "Home");
        
        
        
        
        Thread waktu = null;
        runTimer waktuRun = new runTimer();
        
        
        waktuRun.start();
        if (detikAtas == 0) {
           
            waktuRun.stop();
     
            
        }
             
        
        
    }

//    private static String format(int i) {
//        String result = String.valueOf(i);
//        if (result.length() == 1) {
//            result = "0" + result;
//        }
//        return result;
//    }

//    public void setonClick(boolean done){
//        this.done = done;
//        
//    }   
//    
//    public boolean getonClick (){
//        return this.done;
//    }
       
      
   /**
     *
     */
    public class runTimer extends Thread {

        @Override
        public void run() {
           // score=0;
            while (true) {
                try {
                    Thread.sleep(1000);
                  score =0;
                    countdownLabela.setText((detikAtas--) + "");
                    System.out.println(detikAtas);
                    if (detikAtas==-1) {
                        score +=0;
                        JOptionPane.showMessageDialog(null, "gagal");
                        JOptionPane.showMessageDialog(null, "skor : "+score);
                        new Game().setVisible(true);
                        stop();
                        
                        
                        
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(Game.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        countdownLabela = new javax.swing.JLabel();
        cards = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        countdownLabela.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        countdownLabela.setForeground(new java.awt.Color(255, 255, 255));
        countdownLabela.setText("0");
        getContentPane().add(countdownLabela, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 120, 30));

        cards.setLayout(new java.awt.CardLayout());
        getContentPane().add(cards, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 460));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tebk/blank.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 0, 200, 460));

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new Game().setVisible(true);
        final JLabel countdownLabel = new JLabel("03:00");
        final Timer t;
        t = new Timer(1000, new ActionListener() {
            int time = 180;

            @Override
            public void actionPerformed(ActionEvent e) {
                time--;
                countdownLabel.setText("");
                if (time == -1) {
                    final Timer timer = (Timer) e.getSource();
                    timer.stop();
                }
            }

        });
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }
